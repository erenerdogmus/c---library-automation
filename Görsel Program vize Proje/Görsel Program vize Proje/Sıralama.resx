<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>